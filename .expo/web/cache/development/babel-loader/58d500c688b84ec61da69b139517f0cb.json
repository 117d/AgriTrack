{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { register } from \"../firebase/fb.methods\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Registration(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      firstName = _useState4[0],\n      setFirstName = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      lastName = _useState6[0],\n      setLastName = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      password = _useState8[0],\n      setPassword = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      confirmPassword = _useState10[0],\n      setConfirmPassword = _useState10[1];\n\n  var emptyState = function emptyState() {\n    setEmail(\"\");\n    setFirstName(\"\");\n    setLastName(\"\");\n    setPassword(\"\");\n    setConfirmPassword(\"\");\n  };\n\n  var onRegister = function onRegister() {\n    if (!firstName) {\n      alert(\"Required\");\n    } else if (!email) {\n      alert(\"Required\");\n    } else if (!password) {\n      alert(\"Required\");\n    } else if (!confirmPassword) {\n      setPassword(\"\");\n      alert(\"Required\");\n    } else if (password !== confirmPassword) {\n      alert(\"Password does not match!\");\n    } else {\n      register(email, password, lastName, firstName);\n      navigation.navigate(\"Loading\");\n      emptyState();\n    }\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.textTitle,\n      children: \"Registration\"\n    }), _jsxs(ScrollView, {\n      children: [_jsx(TextInput, {\n        style: styles.textInput,\n        placeholder: \"First name\",\n        value: firstName,\n        onChangeText: function onChangeText(name) {\n          return setFirstName(name);\n        }\n      }), _jsx(TextInput, {\n        style: styles.textInput,\n        placeholder: \"Last name\",\n        value: lastName,\n        onChangeText: function onChangeText(name) {\n          return setLastName(name);\n        }\n      }), _jsx(TextInput, {\n        style: styles.textInput,\n        placeholder: \"Email\",\n        value: email,\n        onChangeText: function onChangeText(email) {\n          return setEmail(email);\n        },\n        keyboardType: \"email-address\",\n        autoCapitalize: \"none\"\n      }), _jsx(TextInput, {\n        style: styles.textInput,\n        placeholder: \"Enter password\",\n        value: password,\n        onChangeText: function onChangeText(password) {\n          return setPassword(password);\n        },\n        autoCapitalize: \"none\",\n        secureTextEntry: true\n      }), _jsx(TextInput, {\n        style: styles.textInput,\n        placeholder: \"Confirm your password\",\n        value: confirmPassword,\n        onChangeText: function onChangeText(confirmPassword) {\n          return setConfirmPassword(confirmPassword);\n        },\n        autoCapitalize: \"none\",\n        secureTextEntry: true\n      }), _jsx(TouchableOpacity, {\n        style: styles.btn,\n        onPress: onRegister,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Sign Up\"\n        })\n      }), _jsx(Text, {\n        style: styles.txt,\n        children: \"Already have an account?\"\n      }), _jsx(TouchableOpacity, {\n        style: styles.btn,\n        onPress: function onPress() {\n          return navigation.navigate(\"Login\");\n        },\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Sign In\"\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#B8D1A9\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  buttonText: {\n    marginTop: 40,\n    fontSize: 36,\n    fontWeight: \"bold\",\n    letterSpacing: 0.25,\n    color: \"black\"\n  },\n  textTitle: {\n    fontSize: 30,\n    color: \"black\",\n    textAlign: \"center\"\n  },\n  btn: {\n    width: \"80%\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 40,\n    backgroundColor: \"#FFCC24\"\n  },\n  textInput: {\n    height: 48,\n    borderRadius: 5,\n    overflow: \"hidden\",\n    backgroundColor: \"white\",\n    marginTop: 10,\n    marginBottom: 10,\n    marginLeft: 30,\n    marginRight: 30,\n    paddingLeft: 16\n  }\n});","map":{"version":3,"sources":["C:/Users/Tomiris/projects/AgriTrack/screens/Registration.js"],"names":["React","useState","register","Registration","navigation","email","setEmail","firstName","setFirstName","lastName","setLastName","password","setPassword","confirmPassword","setConfirmPassword","emptyState","onRegister","alert","navigate","styles","container","textTitle","textInput","name","btn","buttonText","txt","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","marginTop","fontSize","fontWeight","letterSpacing","color","textAlign","width","borderRadius","height","overflow","marginBottom","marginLeft","marginRight","paddingLeft"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { StyleSheet, Text, View, TouchableOpacity, Image } from \"react-native\";\r\nimport { ScrollView, TextInput } from \"react-native-web\";\r\nimport { register } from \"../firebase/fb.methods\";\r\n\r\nexport default function Registration({ navigation }) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const emptyState = () => {\r\n    setEmail(\"\");\r\n    setFirstName(\"\");\r\n    setLastName(\"\");\r\n    setPassword(\"\");\r\n    setConfirmPassword(\"\");\r\n  };\r\n\r\n  const onRegister = () => {\r\n    if (!firstName) {\r\n      alert(\"Required\");\r\n    } else if (!email) {\r\n      alert(\"Required\");\r\n    } else if (!password) {\r\n      alert(\"Required\");\r\n    } else if (!confirmPassword) {\r\n      setPassword(\"\");\r\n      alert(\"Required\");\r\n    } else if (password !== confirmPassword) {\r\n      alert(\"Password does not match!\");\r\n    } else {\r\n      register(email, password, lastName, firstName);\r\n      navigation.navigate(\"Loading\");\r\n      emptyState();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.textTitle}>Registration</Text>\r\n      {/*\r\n      <TouchableOpacity\r\n        style={styles.backButton}\r\n        onPress={() => navigation.navigate(\"Home\")}\r\n      >\r\n        <Text style={styles.buttonText}>BACK</Text>\r\n      </TouchableOpacity>\r\n      */}\r\n      <ScrollView>\r\n        <TextInput\r\n          style={styles.textInput}\r\n          placeholder=\"First name\"\r\n          value={firstName}\r\n          onChangeText={(name) => setFirstName(name)}\r\n        />\r\n        <TextInput\r\n          style={styles.textInput}\r\n          placeholder=\"Last name\"\r\n          value={lastName}\r\n          onChangeText={(name) => setLastName(name)}\r\n        />\r\n        <TextInput\r\n          style={styles.textInput}\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChangeText={(email) => setEmail(email)}\r\n          keyboardType=\"email-address\"\r\n          autoCapitalize=\"none\"\r\n        />\r\n        <TextInput\r\n          style={styles.textInput}\r\n          placeholder=\"Enter password\"\r\n          value={password}\r\n          onChangeText={(password) => setPassword(password)}\r\n          autoCapitalize=\"none\"\r\n          secureTextEntry={true}\r\n        />\r\n        <TextInput\r\n          style={styles.textInput}\r\n          placeholder=\"Confirm your password\"\r\n          value={confirmPassword}\r\n          onChangeText={(confirmPassword) =>\r\n            setConfirmPassword(confirmPassword)\r\n          }\r\n          autoCapitalize=\"none\"\r\n          secureTextEntry={true}\r\n        />\r\n        <TouchableOpacity style={styles.btn} onPress={onRegister}>\r\n          <Text style={styles.buttonText}>Sign Up</Text>\r\n        </TouchableOpacity>\r\n        <Text style={styles.txt}>Already have an account?</Text>\r\n        <TouchableOpacity\r\n          style={styles.btn}\r\n          onPress={() => navigation.navigate(\"Login\")}\r\n        >\r\n          <Text style={styles.buttonText}>Sign In</Text>\r\n        </TouchableOpacity>\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#B8D1A9\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  buttonText: {\r\n    marginTop: 40,\r\n    fontSize: 36,\r\n    fontWeight: \"bold\",\r\n    letterSpacing: 0.25,\r\n    color: \"black\",\r\n  },\r\n  textTitle: {\r\n    fontSize: 30,\r\n    color: \"black\",\r\n    textAlign: \"center\",\r\n  },\r\n  btn: {\r\n    width: \"80%\",\r\n    borderRadius: 25,\r\n    height: 50,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginTop: 40,\r\n    backgroundColor: \"#FFCC24\",\r\n  },\r\n  textInput: {\r\n    height: 48,\r\n    borderRadius: 5,\r\n    overflow: \"hidden\",\r\n    backgroundColor: \"white\",\r\n    marginTop: 10,\r\n    marginBottom: 10,\r\n    marginLeft: 30,\r\n    marginRight: 30,\r\n    paddingLeft: 16,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}